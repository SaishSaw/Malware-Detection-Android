import streamlit as st 
import pickle 
import xgboost
import pandas as pd
import androguard
import tempfile

with open('naticus.pkl', 'rb') as file:
    xgbclf, feature_order = pickle.load(file)
print("Feature Order:", feature_order)


import androguard.core.bytecodes.apk as apk

def extract_apk_features(apk_file):
    a = apk.APK(apk_file)

    # Extract Android permissions
    permissions = a.get_permissions()

    # Extract API signatures
    api_signatures = a.get_signature_names()

    # Extract hardware details (if available in the manifest)
    hardware_features = a.get_features()

    # Extract intent actions (from the AndroidManifest.xml)
    intent_actions = []
    for action in a.get_intent_filters('activity', 'action'):
        intent_actions.extend(action)

    # Create a dictionary to store the extracted features
    extracted_features = {
        'permissions': [int(permission in permissions) for permission in feature_mapping],
        'api_signatures': [int(signature in api_signatures) for signature in feature_mapping],
        'hardware_features': [int(feature in hardware_features) for feature in feature_mapping],
        'intent_actions': [int(action in intent_actions) for action in feature_mapping]
    }
    return extracted_features

feature_mapping = [
'android.permission.READ_PHONE_STATE',                                       
'com.google.android.c2dm.permission.RECEIVE','android.permission.RECEIVE_BOOT_COMPLETED',                                 
'com.android.launcher.permission.INSTALL_SHORTCUT','android.permission.ACCESS_COARSE_LOCATION',                                 
'android.permission.GET_TASKS','android.permission.ACCESS_FINE_LOCATION',                                   
'android.permission.SYSTEM_ALERT_WINDOW','com.google.android.providers.gsf.permission.READ_GSERVICES','com.android.vending.BILLING',                                            
'android.permission.READ_EXTERNAL_STORAGE','android.permission.ACCESS_WIFI_STATE','android.permission.SEND_SMS',                                             
'android.permission.WAKE_LOCK','android.permission.CAMERA','android.permission.GET_ACCOUNTS',                                           
'android.permission.READ_CONTACTS','android.permission.WRITE_SETTINGS',                                        
'android.permission.READ_SMS','com.sec.android.provider.badge.permission.WRITE','android.permission.RECORD_AUDIO',                                           
'android.permission.WRITE_EXTERNAL_STORAGE','android.permission.CHANGE_WIFI_STATE','android.permission.RECEIVE_SMS',                                            
'android.permission.KILL_BACKGROUND_PROCESSES','android.permission.CALL_PHONE','android.permission.ACCESS_NETWORK_STATE',                                   
'com.sonyericsson.home.permission.BROADCAST_BADGE','com.anddoes.launcher.permission.UPDATE_COUNT','android.permission.READ_PROFILE',                                           
'android.permission.VIBRATE','android.permission.RESTART_PACKAGES','com.sec.android.provider.badge.permission.READ','android.permission.READ_LOGS',                                              
'com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE','android.permission.CHANGE_CONFIGURATION',                                   
'android.permission.MOUNT_UNMOUNT_FILESYSTEMS','android.permission.RECEIVE_USER_PRESENT','android.permission.INTERNET',                                               
'android.permission.USE_CREDENTIALS','android.permission.BLUETOOTH','com.majeur.launcher.permission.UPDATE_BADGE',                               
'com.htc.launcher.permission.UPDATE_SHORTCUT','android.permission.REQUEST_INSTALL_PACKAGES',                               
'com.huawei.android.launcher.permission.READ_SETTINGS','com.android.launcher.permission.UNINSTALL_SHORTCUT','android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',
'android.permission.WRITE_CONTACTS','android.permission.USE_FINGERPRINT','android.permission.MODIFY_AUDIO_SETTINGS']
#features = extract_apk_features()

#result_dict = {feature: 0 for feature in feature_mapping}

# Iterate over the feature_mapping list
##for feature in feature_mapping:
    # Check if the feature exists in the extracted_features dictionary
  #  for extracted_list in extract_apk_features().values():
  #      if feature in extracted_list:
  #          # Set the value in the result dictionary to 1
  #          result_dict[feature] = 1
  #      else:
  #          result_dict[feature] = 0
           
#Print the final result dictionary
#print(result_dict)
#tabular_data = pd.DataFrame(result_dict,index=[0])
#paramters = tabular_data.columns.to_list()
def model(parameters):
    input_dict = {feature: bool(value) for feature, value in zip(feature_order, parameters)}
    data = pd.DataFrame(input_dict, index=[0])
    prediction = xgbclf.predict(data)[0]
    if prediction == 1:
        return 'The apk contains potential malware. Be aware!'
    else:
        return 'The apk is safe. You can proceed with installation.'


def main():
    st.title('Android Malware Detection')
    upload_file = st.file_uploader("Upload APK",type=['apk'])
    if upload_file is not None:
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            temp_file.write(upload_file.read())
            temp_file_path = temp_file.name
        #apk_content = upload_file.read()
        features = extract_apk_features(temp_file_path)
        feature_mapping = [
        'android.permission.READ_PHONE_STATE',                                       
        'com.google.android.c2dm.permission.RECEIVE','android.permission.RECEIVE_BOOT_COMPLETED',                                 
        'com.android.launcher.permission.INSTALL_SHORTCUT','android.permission.ACCESS_COARSE_LOCATION',                                 
        'android.permission.GET_TASKS','android.permission.ACCESS_FINE_LOCATION',                                   
        'android.permission.SYSTEM_ALERT_WINDOW','com.google.android.providers.gsf.permission.READ_GSERVICES','com.android.vending.BILLING',                                            
        'android.permission.READ_EXTERNAL_STORAGE','android.permission.ACCESS_WIFI_STATE','android.permission.SEND_SMS',                                             
        'android.permission.WAKE_LOCK','android.permission.CAMERA','android.permission.GET_ACCOUNTS',                                           
        'android.permission.READ_CONTACTS','android.permission.WRITE_SETTINGS',                                        
        'android.permission.READ_SMS','com.sec.android.provider.badge.permission.WRITE','android.permission.RECORD_AUDIO',                                           
        'android.permission.WRITE_EXTERNAL_STORAGE','android.permission.CHANGE_WIFI_STATE','android.permission.RECEIVE_SMS',                                            
        'android.permission.KILL_BACKGROUND_PROCESSES','android.permission.CALL_PHONE','android.permission.ACCESS_NETWORK_STATE',                                   
        'com.sonyericsson.home.permission.BROADCAST_BADGE','com.anddoes.launcher.permission.UPDATE_COUNT','android.permission.READ_PROFILE',                                           
        'android.permission.VIBRATE','android.permission.RESTART_PACKAGES','com.sec.android.provider.badge.permission.READ','android.permission.READ_LOGS',                                              
        'com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE','android.permission.CHANGE_CONFIGURATION',                                   
        'android.permission.MOUNT_UNMOUNT_FILESYSTEMS','android.permission.RECEIVE_USER_PRESENT','android.permission.INTERNET',                                               
        'android.permission.USE_CREDENTIALS','android.permission.BLUETOOTH','com.majeur.launcher.permission.UPDATE_BADGE',                               
        'com.htc.launcher.permission.UPDATE_SHORTCUT','android.permission.REQUEST_INSTALL_PACKAGES',                               
        'com.huawei.android.launcher.permission.READ_SETTINGS','com.android.launcher.permission.UNINSTALL_SHORTCUT','android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',
        'android.permission.WRITE_CONTACTS','android.permission.USE_FINGERPRINT','android.permission.MODIFY_AUDIO_SETTINGS']
        result_dict = {feature: 0 for feature in feature_mapping}

# Iterate over the feature_mapping list
        for feature in feature_mapping:
    # Check if the feature exists in the extracted_features dictionary
            for extracted_list in features.values():
                if feature in extracted_list:
            # Set the value in the result dictionary to 1
                   result_dict[feature] = 1
                else:
                   result_dict[feature] = 0
           

        print(result_dict)
        tabular_data = pd.DataFrame(result_dict,index=[0])
        parameter = tabular_data.columns.to_list()
        ML_model = ''
        
        if st.button('Predict'):
            ML_model = model(parameter)
        
        st.success(ML_model)

if __name__ =="__main__":
    main()


